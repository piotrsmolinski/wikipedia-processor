<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <artifactId>wikipedia-processor-docker</artifactId>
    <packaging>docker</packaging>

    <parent>
        <groupId>dev.psmolinski.kafka.wikipedia</groupId>
        <artifactId>wikipedia-processor</artifactId>
        <version>0.0.2-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>wikipedia-processor-kstreams</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <containerNamePattern>%a</containerNamePattern>
                    <images>
                        <image>
                            <name>psmolinski/wikipedia-processor</name>
                            <alias>kstreams</alias>
                            <build>
                                <contextDir>${project.basedir}/src/main/docker</contextDir>
                                <assembly>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <outputDirectory>lib</outputDirectory>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <dependsOn>
                                    <container>kafka</container>
                                    <container>registry</container>
                                    <container>setup</container>
                                </dependsOn>
                                <volumes>
                                    <bind>
                                        <volume>${project.basedir}/src/test/config/application.yml:/app/config/application.yml</volume>
                                    </bind>
                                </volumes>
                                <network>
                                    <mode>custom</mode>
                                    <name>test</name>
                                </network>
                                <wait>
                                    <log>State transition from REBALANCING to RUNNING</log>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>zookeeper</alias>
                            <name>confluentinc/cp-zookeeper:${confluent.version}</name>
                            <run>
                                <env>
                                    <ZOOKEEPER_CLIENT_PORT>2181</ZOOKEEPER_CLIENT_PORT>
                                </env>
                                <network>
                                    <mode>custom</mode>
                                    <name>test</name>
                                </network>
                                <wait>
                                    <log>binding to port</log>
                                    <time>10000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>kafka</alias>
                            <name>confluentinc/cp-kafka:${confluent.version}</name>
                            <run>
                                <dependsOn>
                                    <container>zookeeper</container>
                                </dependsOn>
                                <env>
                                    <KAFKA_ZOOKEEPER_CONNECT>zookeeper:2181</KAFKA_ZOOKEEPER_CONNECT>
                                    <KAFKA_LISTENERS>INTERNAL://:9092,EXTERNAL://:9093</KAFKA_LISTENERS>
                                    <KAFKA_ADVERTISED_LISTENERS>INTERNAL://kafka:9092,EXTERNAL://localhost:9093</KAFKA_ADVERTISED_LISTENERS>
                                    <KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT</KAFKA_LISTENER_SECURITY_PROTOCOL_MAP>
                                    <KAFKA_INTER_BROKER_LISTENER_NAME>INTERNAL</KAFKA_INTER_BROKER_LISTENER_NAME>
                                    <KAFKA_BROKER_ID>0</KAFKA_BROKER_ID>
                                    <KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>1</KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR>
                                    <KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR>1</KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR>
                                    <KAFKA_TRANSACTION_STATE_LOG_MIN_ISR>1</KAFKA_TRANSACTION_STATE_LOG_MIN_ISR>
                                    <KAFKA_AUTO_CREATE_TOPICS_ENABLE>false</KAFKA_AUTO_CREATE_TOPICS_ENABLE>
                                    <KAFKA_LOG4J_ROOT_LOGLEVEL>INFO</KAFKA_LOG4J_ROOT_LOGLEVEL>
                                    <KAFKA_LOG4J_LOGGERS>kafka.authorizer.logger=INFO</KAFKA_LOG4J_LOGGERS>
                                </env>
                                <ports>
                                    <port>9093:9093</port>
                                </ports>
                                <network>
                                    <mode>custom</mode>
                                    <name>test</name>
                                </network>
                                <wait>
                                    <log>.KafkaServer id=0. started</log>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>registry</alias>
                            <name>confluentinc/cp-schema-registry:${confluent.version}</name>
                            <run>
                                <dependsOn>
                                    <container>kafka</container>
                                </dependsOn>
                                <env>
                                    <SCHEMA_REGISTRY_HOST_NAME>registry</SCHEMA_REGISTRY_HOST_NAME>
                                    <SCHEMA_REGISTRY_LISTENERS>http://0.0.0.0:8081</SCHEMA_REGISTRY_LISTENERS>
                                    <SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS>kafka:9092</SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS>
                                    <SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL>PLAINTEXT</SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL>
                                </env>
                                <ports>
                                    <port>8081:8081</port>
                                </ports>
                                <network>
                                    <mode>custom</mode>
                                    <name>test</name>
                                </network>
                                <wait>
                                    <log>Server started, listening for requests</log>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                        <image>
                            <alias>setup</alias>
                            <name>confluentinc/cp-kafka:${confluent.version}</name>
                            <run>
                                <dependsOn>
                                    <container>kafka</container>
                                    <container>registry</container>
                                </dependsOn>
                                <volumes>
                                    <bind>
                                        <volume>${project.basedir}/src/test/scripts/create-topics.sh:/home/appuser/create-topics.sh</volume>
                                    </bind>
                                </volumes>
                                <network>
                                    <mode>custom</mode>
                                    <name>test</name>
                                </network>
                                <cmd>
                                    <shell>/home/appuser/create-topics.sh</shell>
                                </cmd>
                                <wait>
                                    <exit>0</exit>
                                    <time>60000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>